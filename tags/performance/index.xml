<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>performance on Tacio Costa</title><link>https://taciomcosta.dev/tags/performance/</link><description>Recent content in performance on Tacio Costa</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 06 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://taciomcosta.dev/tags/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>Profiling in Go</title><link>https://taciomcosta.dev/posts/profiling-in-go/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><guid>https://taciomcosta.dev/posts/profiling-in-go/</guid><description>&amp;ldquo;The real problem is that programmers have spent far too much time worrying about efficiency in the wrong places and at the wrong times; premature optimization is the root of all evil (or at least most of it) in programming.&amp;rdquo; - The Art of Computer Programming Why bother? Profiling is a technique to analyze the utilization of computational resources of applications, such as CPU and memory.</description></item></channel></rss>